---
description: Coding Recommendation Rules
globs: *.ts,*.scss,*.css,*.mjs,*.js
alwaysApply: false
---
# Coding Recommendations for Project

Write code in a specified programming language (or detect it automatically) following certain criteria and tasks. Comments in the code are allowed as well, but preferably in English. Sometimes a fallback implementation may be acceptable if a new feature is too recent and is likely not supported even in Chrome Dev versions.

The primary build system is Vite. Take into account the latest versions of browsers (Chrome 137 and above) and standards (WICG, WHATWG, ECMA, W3C, TC39, CSSWG), as much as possible...

Before taking any actions, lookup all (if available) used or related (possible) imports, or cheat-sheets registry (`cheat-sheet.mdc`)! Also read or learn `tsconfig.ts` aliases.

In CSS, feel free to use `calc` or any math functions (such as min, max, sign, abs, clamp, etc.) extensively. It is also preferable to use `@property` where appropriate, applicable, and possible. Prefers to use logical properties and values. Also use (S)CSS nesting (include for selectors) where is possible, and newest selectors, such as `:is`, `:has`, `:where`, etc.

It is also desirable not to output excessive amounts of code and lines; whenever possible, keep things simple and concise. For follow-up requests, output only the potential edits. Also, de-dublicate redundant or unnecessary code, where is possible.

CSS can also be wrapped in SCSS for additional simplification and/or better readability or clarity.

Try to fix possible validation issues, if found in/by IDE/Editor, and fix very weird or non-perfect indentations (using by spaces).

Write and output ONLY code, without any introduction, intermission or footer or post-scriptum.

---

## Common Imports

- `fest/dom`
- `fest/lure`
- `fest/object`
- `fest/fl-ui`

Imports of project modules isn't should internally import by-self name.

---

## Project and Modules repositories

- <https://github.com/fest-live/dom.ts>
- <https://github.com/fest-live/lur.e>
- <https://github.com/fest-live/object.ts>
- <https://github.com/fest-live/fl.ui>
- <https://github.com/u2re-space/unite-2.man>

## Project Directory Mapping

By default, use key-name as import root.

|   |   |
| `fest/lure`   | `modules/lur.e`     |
| `fest/dom`    | `modules/dom.ts`    |
| `fest/object` | `modules/object.ts` |
| `fest/fl-ui`  | `modules/fl.ui`     |

---

## Specifications

- <https://chromestatus.com/>
- <https://developer.chrome.com/>
- <https://html.spec.whatwg.org/>
- <https://drafts.csswg.org/>
- <https://www.w3.org/TR/css/>
- <https://tc39.es/ecma262/>
- <https://github.com/w3c/csswg-drafts>
- <https://github.com/tc39/>
- <https://github.com/tc39/ecma262>
- <https://github.com/WICG/html-in-canvas>

## Our projects (for following)

- <https://github.com/fest-live>

## Exact draft specifications

- <https://www.w3.org/TR/css-mixins-1/>
- <https://www.w3.org/TR/css-values-5/>
- <https://www.w3.org/TR/css-color-5/>
- <https://www.w3.org/TR/css-properties-values-api-1/>
- <https://drafts.csswg.org/css-color-6/>
- <https://drafts.css-houdini.org/css-properties-values-api/>

## About SCSS

- <https://sass-lang.com/documentation/>

## About Vite

- <https://vite.dev/guide/>
- <https://vite.dev/config/>
