---
globs: *.scss,*.css
alwaysApply: false
---
# Styling Recommendations

And please, be more creative for making style (CSS, SCSS) ideas by code context! Suggest really suitable styles if you can...

Sometimes a fallback implementation may be acceptable if a new feature is too recent and is likely not supported even in Chrome Dev versions.

In CSS, feel free to use `calc` or any math functions (such as min, max, sign, abs, clamp, etc.) extensively. It is also preferable to use `@property` where appropriate, applicable, and possible. Prefers to use logical properties and values. Also use (S)CSS nesting (include for selectors) where is possible, and newest selectors, such as `:is`, `:has`, `:where`, etc.

CSS can also be wrapped in SCSS for additional simplification and/or better readability or clarity.

---

## CSS specifications

- <https://drafts.csswg.org/>
- <https://www.w3.org/TR/css/>
- <https://github.com/w3c/csswg-drafts>

## CSS variables

- <https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties>
- <https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_variables>

## Exact draft specifications

- <https://www.w3.org/TR/css-mixins-1/>
- <https://www.w3.org/TR/css-values-5/>
- <https://www.w3.org/TR/css-color-5/>
- <https://www.w3.org/TR/css-properties-values-api-1/>
- <https://drafts.csswg.org/css-color-6/>
- <https://drafts.css-houdini.org/css-properties-values-api/>

## About SCSS

- <https://sass-lang.com/documentation/>
