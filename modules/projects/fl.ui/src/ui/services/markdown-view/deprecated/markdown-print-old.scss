@page {
    size: A4;
    margin: 10mm 12mm 10mm 12mm;
    font-family: "Source Sans 3", "Open Sans", "Ubuntu Sans", "Noto Sans", "Segoe UI", "Helvetica", "Calibri", "Carlito", "Twemoji Country Flags", "Comic Sans", Helvetica, serif, -apple-system, BlinkMacSystemFont, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji";
    font-size: 0.7em;

    hr:only-child { display: none !important; }
    p, span { display: none !important; };

    @bottom-center { content: counter(page); }
    @top-right { content: "UC"; }
}

//
@layer md-print {

    [data-print] {

        math {
            math-style: normal;
            math-shift: normal;
            math-depth: auto-add;
        }

        math[mode="inline"] {
            math-style: compact;
            math-shift: compact;
        }

        *,
        *::before,
        *::after {
            box-sizing: border-box;
            white-space: normal;

            break-before: auto;
            break-inside: auto;
            break-after: auto;
        }

        &,
        * {
            content-visibility: visible;
            max-inline-size: 100%;
            scrollbar-width: thin;
            scrollbar-color: transparent transparent;
        }

        & {
            line-height: 1.5;
            isolation: isolate;
            white-space: normal;
        };

        p { line-height: 1.5; margin-block: 0.5em; margin-block-start: 1em; white-space: pre-line; };

        img,
        picture,
        video,
        canvas,
        svg {
            display: inline-block;
            max-width: min(min(40%, 50dvi), 50cqi);
            width: max-content;
        }

        input,
        button,
        textarea,
        select {
            font: inherit;
        }

        // Paragraphs (merged duplicate settings)
        p {
            text-overflow: ellipsis;
            overflow-wrap: break-word;
            text-indent: 0px;
            font-family: 10pt;

            strong:first-child { font-size: 1.05em; };
        }

        // Headings â€“ common settings for all, then specifics
        h1,
        h2,
        h3,
        h4,
        h5,
        h6 {
            //font-family: "Times New Roman", serif;
            font-weight: bold;
            margin: 1em 0;
            text-align: start;
            text-wrap: balance;
            overflow-wrap: break-word;
            display: block;
            flex-direction: row;
            break-before: auto;
            break-inside: avoid-page;
            break-after: avoid-page;
        }

        //

        //
        h1:not(:first-child) { break-before: page; };
        h1:not(:first-of-type) { break-before: page; };

        //
        h1,
        h2 {
            //border-bottom: 1px solid #0004;
            inline-size: max-content;
            min-inline-size: 60%;
            padding-inline: 0.5em;
            padding-block: 0.5em;
            margin-inline: 0em;
            box-sizing: border-box;
            max-inline-size: 100%;
            display: block;
            text-align: start;
            margin-block: 0.5em;
            margin-block-start: 0.25em;
            //place-self: center;
        }

        //
        h1 { place-self: center; text-align: center; font-size: 2em; }
        hr { margin-block: 0.25em; }
        h1, h2, h3, h4, h5, h6 { padding-inline: 0.5em; box-sizing: border-box; }
        h3, h4, h5, h6 { padding-inline: 0.75em; }

        h2 {
            //border-bottom: 1px solid #0003;
            font-size: 1.6em;
        }

        //:not(h1)+h2 { break-before: auto; }

        h3 {
            font-size: 1.2em;
            //border-bottom: 1px solid #0003;
            padding-block-end: 0.2em;
            margin-block-end: 1rem;
        }

        h4 {
            font-size: 1.05em;
        }

        h5,
        h6 {
            font-size: 1em;
        }

        // Additional element resets and grouping
        #root,
        #__next {
            isolation: isolate;
        }

        p,
        ol,
        ul {
            block-size: max-content;
            display: block;
        }

        // [data-print] base styling
        // (kept here for properties that apply to the container itself)
        & {
            text-align: justify;
            //font-family: "Times New Roman";
            overflow: auto;
        }

        // Inline and list elements
        strong {
            display: inline;
            white-space: normal;
            font-weight: bold;
            break-inside: avoid-page;
            break-before: auto;
        }

        //
        strong:has(+:not(h1, h2, h3, h4, h5, h6, hr)) {
            break-after: avoid-page;
        }

        //
        :where(h1, h2, h3, h4, h5, h6):has(+pre, +code) {
            break-before: page;
        }

        /*:where(h1, h2, h3, h4, h5, h6) + :where(p, pre, code) {
            break-before: page !important;
        }*/

        :where(ol, ul) {
            text-indent: 0em;
            margin-block: 0.5em;
            margin-inline-start: 0.75em;
            gap: 0px;
        }

        :where(ol, ul) :where(ol, ul) {
            text-indent: 0em;
            margin-inline-start: 0em;
            margin-block: 0.5em;
            gap: 0px;
        }

        :where(li) {
            margin-block: 0em;
            text-indent: 0em;
            padding: 0px;
        }

        li {
            padding: 0;
            white-space: normal;
            text-align: start;

            p {
                display: inline;
                white-space: normal;
            }

            &::marker {
                display: inline;
                white-space: nowrap;
            }
        }

        table,
        li,
        p,
        blockquote,
        ol,
        ul {
            break-inside: avoid-page;
        }

        p { text-indent: 0.75em; }

        blockquote {
            text-indent: 0px;
            break-before: auto;
            break-inside: avoid-page;
            break-after: avoid-page;
            margin-inline: 1.75em;
            padding-inline: 1em;

            p { text-indent: 0px; }
        }

        :not(hr, h1, h2, h3, h4, h5, h6):has(+:where(ul, ol, li)) {
            break-after: avoid-page;
        }

        :where(p,pre,code):has(+:not(p, h1, h2, h3, h4, h5, h6, hr)) {
            break-after: avoid-page;
        }

        :where(hr, h1, h2, h3, h4, h5, h6, strong, ol, ul):has(+table) {
            break-after: avoid-page;
        }

        :where(hr, h1, h2, h3, h4, h5, h6, strong, ol, ul) +table {
            break-before: avoid-page;
        }

        .pb,
        .np,
        .pagebreak,
        .newpage,
        .page-break,
        .new-page {
            background-color: transparent;
            page-break-after: always;
            break-after: page;
        }

        :where(ol, ul, li):has(+p,+pre,+code) {
            break-after: avoid-page;
        }

        hr {
            display: block;
            block-size: 1px;
            margin: 2em 1em;
        }

        img {
            color: transparent;
            font-size: 0;
            line-height: 0;
        }

        img:not([src]),
        img[src=""],
        img.error {
            display: none;
            visibility: collapse;
            content-visibility: hidden;
        }

        div.hide,
        span.hide {
            display: none;
            visibility: collapse;
            content: "\[...\]";
            break-inside: avoid-page;
        }

        // Table styling with nesting
        table {
            inline-size: 100%;
            border-collapse: collapse;
            inline-size: max-content;
            //border: none 0px transparent;
            //border: solid 1px oklch(from var(--rv-color, #000) l c h / 0.1);

            @media screen {
                border: solid 1px rgb(from light-dark( #101010, #fff) r g b / 0.1) !important;
            }

            thead,
            tfoot,
            tbody,
            th,
            td,
            tr {
                padding: 0.3em;
                padding-inline: 0.6em;
                white-space: normal;
                //border: solid 1px oklch(from var(--rv-color, #000) l c h / 0.1);
            }

            @media screen {
                th, td, tr {
                    border: none 0px transparent;
                }
            }
        }

        //
        hr:only-child { display: none !important; };

        pre {
            break-after: auto;
            break-before: auto;
        }

        code {
            white-space: pre-wrap;
            break-after: auto;
            break-before: auto;
            break-inside: avoid-page;
        }
    }

    //
    @media screen {
        * {
            font-smooth: always !important;
            -moz-osx-font-smoothing: auto !important;
            -webkit-font-smoothing: subpixel-antialiased !important;
        }
    }

    //
    @media print {
        * {
            font-smooth: never !important;
            -webkit-font-smoothing: antialiased !important;
            -webkit-font-smoothing: none !important;
            -moz-osx-font-smoothing: grayscale !important;
        }

        body, html { background-color: white !important; };
        :host { background-color: transparent !important; };
        p, span, a, ul, li, ol, strong, h1, h2 { filter: grayscale(100%); }
        blockquote, blockquote p { filter: none; }

        @scope (:where(body, :host) :not([data-print])) to (:has(> [data-print])) {
            :scope> :where(div, img, canvas, :not(:defined)):not([data-print]):not([data-print-pass]) {
                display: none !important;
                visibility: collapse !important;
            }
        }

        body {
            margin: 0;
            padding: 0;
            overflow: auto;
        }

        *:not(:defined),
        style,
        script,
        link {
            display: none !important;
            visibility: collapse !important;
        }

        [data-print] {

            li,
            ul,
            ol {
                text-align: start;
            }

            hr { background-color: transparent; }
        }

        [data-print-pass] {
            display: contents !important;
            visibility: visible;
        }
    }
}

//
@layer markdown-page {
    :host {

        &, * {
            box-sizing: border-box;
        }

        & {
            background-color: transparent;
            inline-size: 100%;
            min-block-size: 100%;
            block-size: 100%;
            max-block-size: min(100dvb, 100cqb);
            display: block;
            flex-direction: column;
            content-visibility: visible;
            overflow: auto;
            container-type: inline-size;
            contain: none;
            padding: 2rem;
            font-size: 1em;
        }

        //
        .markdown-body[data-print] {
            background-color: transparent;
            container-type: normal;
            contain: none;
            display: block;
            inline-size: 100%;
            block-size: max-content;
            min-block-size: 100%;
            max-block-size: none;
            overflow: hidden;
            font-size: 1em;
        }

    }
}
