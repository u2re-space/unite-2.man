@use "sass:list";

/* */
@use "../_decl/constants" as *;
@use "../_decl/names" as *;

/* */
@use "../_lib/decompose" as *;
@use "../_lib/generation" as *;
@use "../_lib/themed" as *;
@use "../_lib/utils" as *;

/* */
@use "../_css5/mfc" as *;

/* */
@mixin types-define($types...) {
    @each $type in $types {
        @include make-function($type);
    }

    /* Reset all properties */
    @each $type in $types {
        .c2-#{$type} {
            @include reset-all-properties();

            /* Reject alt-themed children */
            & *:not(.c2-surface, .c2-contrast, .c2-inverse):not(#{exclude($type, "surface", "contrast", "inverse")}):not(:has(.c2-surface > *, .c2-contrast > *, .c2-inverse > *)) {
                @include reset-all-properties();
            }

            /* Inherit from parent */
            &::before, &::after, &::placeholder, &::marker,
            & > *::before, & > *::after, & > *::placeholder, & > *::marker {
                @include reset-all-properties();
            }

            /* Selection styles */
            :where(&::selection), & > :where(*::selection) {
                --#{$type}-tone: 0.05;
                background-color: --c2-on-#{$type}(var(--selection-tone-shift, 0.0), var(--#{$current-name}, transparent));
                color: --c2-#{$type}(var(--selection-tone-shift, 0.0), var(--#{$current-name}, transparent));
                --icon-color: --c2-#{$type}(var(--selection-tone-shift, 0.0), var(--#{$current-name}, transparent));
            }

            /* Variables */
            & {
                accent-color: --c2-on-#{$type}(var(--accent-tone-shift, 0.0), var(--#{$current-name}, transparent));
                scrollbar-color: --c2-on-#{$type}(var(--scrollbar-tone-shift, 0.0), var(--#{$current-name}, transparent));
                background-color: --c2-#{$type}(var(--background-tone-shift, 0.0), var(--#{$current-name}, transparent));
                color: --c2-on-#{$type}(var(--color-tone-shift, 0.0), var(--#{$current-name}, transparent));
                caret-color: --c2-on-#{$type}(var(--caret-tone-shift, 0.0), var(--#{$current-name}, transparent));
                --icon-color: --c2-on-#{$type}(var(--icon-tone-shift, 0.0), var(--#{$current-name}, transparent));
            }

            /* Variables */
            & {
                border-color: oklch(from --c2-on-#{$type}(var(--border-tone-shift, 0.0), var(--#{$current-name}, transparent)) l c h / 0);
                outline-color: oklch(from --c2-on-#{$type}(var(--outline-tone-shift, 0.0), var(--#{$current-name}, transparent)) l c h / 0);
                text-decoration-color: oklch(from --c2-on-#{$type}(var(--text-decoration-tone-shift, 0.0), var(--#{$current-name}, transparent)) l c h / 0);
                text-emphasis-color: oklch(from --c2-on-#{$type}(var(--text-emphasis-tone-shift, 0.0), var(--#{$current-name}, transparent)) l c h / 0);
            }

            /* Blur */
            &.c2-with-blur, & .c2-with-blur {
                backdrop-filter: blur(1rem);
                background-color: oklch(from --c2-#{$type}(var(--blur-tone-shift, 0.0), var(--#{$current-name}, transparent)) l c h / 0.2);
            }

            /* Re-enable colored children */
            & :where(.c2-primary, .c2-secondary, .c2-trinary) {
                @include reset-all-properties();
                accent-color: --c2-on-#{$type}(var(--accent-tone-shift, 0.0), var(--#{$current-name}, transparent));
                scrollbar-color: --c2-on-#{$type}(var(--scrollbar-tone-shift, 0.0), var(--#{$current-name}, transparent)) transparent;
                color: --c2-on-#{$type}(var(--color-tone-shift, 0.0), var(--#{$current-name}, transparent));
                caret-color: --c2-on-#{$type}(var(--caret-tone-shift, 0.0), var(--#{$current-name}, transparent));
                --icon-color: --c2-on-#{$type}(var(--icon-tone-shift, 0.0), var(--#{$current-name}, transparent));
            }


            /* */
            &:is(ui-longtext), & ui-longtext {
                --background-tone-shift: 0.1;
            }
        }
    }
}
