@use "sass:list";

/* */
@use "../_decl/names" as *;
@use "../_decl/constants" as *;

/* */
@use "../_lib/generation" as *;
@use "../_lib/drv-shades" as *;

/* */
/* Generate function */
@mixin make-function($type, $current: 'current') {
    $f-args: "(--tone-shift <number>: 0, --#{$current} <color>: var(--#{$current}, inherit)) returns <color>";
    $f-name: "--c2-#{$type}";

    /* */
    @#{"function"} #{$f-name}#{$f-args} {
        @include generate-themed-nodes($current, ($type)); /* generate themed nodes */

        /* initial (default) value */
        --#{$type}-tone-shift: var(--tone-shift, 0.0);
        @include tone-shifting($type, "#{$type}-tone-shift");
        @include apply-shade($type);

        /* */
        result: var(--#{$current}-#{$type}, inherit);
    }

    /* */
    $f-on-type: "on-#{$type}";
    $f-o-name: "--c2-#{$f-on-type}";
    @#{"function"} #{$f-o-name}#{$f-args} {
        @include generate-themed-nodes($current, ($f-on-type)); /* generate themed nodes */

        /* initial (default) value */
        --#{$f-on-type}-tone-shift: var(--tone-shift, 0.0);
        @include tone-shifting($f-on-type, "#{$f-on-type}-tone-shift");
        @include apply-shade($f-on-type);

        /* */
        result: var(--#{$current}-#{$f-on-type}, inherit);
    }
}
