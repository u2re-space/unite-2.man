@use "sass:list";

/* */
@use "./_decl/properties" as *;
@use "./_decl/names" as *;
@use "./_decl/constants" as *;
@use "./_decl/initials" as *;

/* */
@use "./_impl/types" as *;
@use "./_impl/usage" as *;

/* */
@use "./_lib/decompose" as *;
@use "./_lib/generation" as *;
@use "./_lib/themed" as *;
@use "./_lib/utils" as *;

/* */
@use "./ctm-2-props" as *;

/* */
@use "./_css5/mfc" as *;

/* Enable components in DOM */
@layer ux-ctm {
    /* */
    :root { @include initials-define(); }
    :scope:not(:root), :host { @include initials-define(inherit); }

    /* Generate property tones */
    :scope, :host, :root,
    .c2-surface, .c2-contrast, .c2-inverse, .c2-primary, .c2-secondary, .c2-trinary {
        @include enable-ctm();
    }

    /* Generate property tones */
    .c2-is-primary { --#{$current-name}  : var(--#{$primary-name}, inherit); }
    .c2-is-trinary { --#{$current-name}  : var(--#{$trinary-name}, inherit); }
    .c2-is-secondary { --#{$current-name}  : var(--#{$secondary-name}, inherit); }

    /* Reset all properties */
    .c2-light { color-scheme: light; @include detected-theme(); }
    .c2-dark  { color-scheme: dark;  @include detected-theme(); }

    /* */
    @include types-define("surface", "contrast", "inverse");

    /* */
    .c2-transparent {
        interpolate-size: allow-keywords;
        background-color: transparent;
        color: inherit;
        accent-color: inherit;
        scrollbar-color: inherit;
        border-color: oklch(from inherit l c h / 0);
        outline-color: oklch(from inherit l c h / 0);
        text-decoration-color: oklch(from inherit l c h / 0);
        text-emphasis-color: oklch(from inherit l c h / 0);
        --icon-color: currentColor;
    }
}
