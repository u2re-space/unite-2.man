/* Detect theme */
@property --if-theme-hack { syntax: "<color>"; inherits: true; initial-value: #000; };

/* Detect theme */
@mixin detected-theme($name: "detected") {
    --#{$name}-theme: 0;
    --if-theme-hack: light-dark(#111, #000);
    --#{$name}-theme: if(
        style(--if-theme-hack: #000): 1;
        style(color-scheme: dark): 1;
        style(color-scheme: only dark): 1;
        else: 0;
    );
}

/* Detect media theme */
@mixin detected-media-theme($name: "detected") {
    & * { --#{$name}-theme: inherit; }

    //
    @media (prefers-color-scheme: light) { --#{$name}-theme: 0; };
    @media (prefers-color-scheme: dark)  { --#{$name}-theme: 1; };

    //
    @container(#{"style(color-scheme: light) or style(color-scheme: only light)"}) { --#{$name}-theme: 0; };
    @container(#{"style(color-scheme: dark)  or style(color-scheme: only dark)"})  { --#{$name}-theme: 1; };
}

/* theme shading determination in [0 to 1] */
@mixin theme-affect($basis-tone: "surface", $when-light, $when-dark) {
    --#{$basis-tone}-dep: calc(#{$when-light} * (1 - var(--detected-theme, 0)) + #{$when-dark} * var(--detected-theme, 0));
}

/* Generate theme affect */
@mixin theme-affect-default($basis-tone: "surface") {
    @include theme-affect($basis-tone,
        "calc(1.0 - var(--#{$basis-tone}-tone, 0.0) * 0.9)",
        "calc(0.1 + var(--#{$basis-tone}-tone, 0.5) * 0.9)");
}
